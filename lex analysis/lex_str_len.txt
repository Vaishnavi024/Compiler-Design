int strlen(const char *str) {
'int' IS A KEYWORD
' ' IS A DELIMITER
'strlen' IS A VALID IDENTIFIER
'(' IS A DELIMITER
'const' IS A VALID IDENTIFIER
' ' IS A DELIMITER
'char' IS A KEYWORD
' ' IS A DELIMITER
'*' IS AN OPERATOR
'str' IS A VALID IDENTIFIER
')' IS A DELIMITER
' ' IS A DELIMITER
'{' IS A DELIMITER

    int length = 0;
' ' IS A DELIMITER
' ' IS A DELIMITER
' ' IS A DELIMITER
' ' IS A DELIMITER
'int' IS A KEYWORD
' ' IS A DELIMITER
'length' IS A VALID IDENTIFIER
' ' IS A DELIMITER
'=' IS AN OPERATOR
' ' IS A DELIMITER
'0' IS AN INTEGER
';' IS A DELIMITER

    jabtak (str[length] != '\0') {
' ' IS A DELIMITER
' ' IS A DELIMITER
' ' IS A DELIMITER
' ' IS A DELIMITER
'jabtak' IS A KEYWORD
' ' IS A DELIMITER
'(' IS A DELIMITER
'str' IS A VALID IDENTIFIER
'[' IS A DELIMITER
'length' IS A VALID IDENTIFIER
']' IS A DELIMITER
' ' IS A DELIMITER
'!' IS NOT A VALID IDENTIFIER
'=' IS AN OPERATOR
' ' IS A DELIMITER
''\0'' IS NOT A VALID IDENTIFIER
')' IS A DELIMITER
' ' IS A DELIMITER
'{' IS A DELIMITER

        length=length+1;
' ' IS A DELIMITER
' ' IS A DELIMITER
' ' IS A DELIMITER
' ' IS A DELIMITER
' ' IS A DELIMITER
' ' IS A DELIMITER
' ' IS A DELIMITER
' ' IS A DELIMITER
'length' IS A VALID IDENTIFIER
'=' IS AN OPERATOR
'length' IS A VALID IDENTIFIER
'+' IS AN OPERATOR
'1' IS AN INTEGER
';' IS A DELIMITER

    }
' ' IS A DELIMITER
' ' IS A DELIMITER
' ' IS A DELIMITER
' ' IS A DELIMITER
'}' IS A DELIMITER

    return length;
' ' IS A DELIMITER
' ' IS A DELIMITER
' ' IS A DELIMITER
' ' IS A DELIMITER
'return' IS A KEYWORD
' ' IS A DELIMITER
'length' IS A VALID IDENTIFIER
';' IS A DELIMITER

}
'}' IS A DELIMITER









